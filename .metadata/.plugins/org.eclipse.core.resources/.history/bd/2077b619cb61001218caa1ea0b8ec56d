package com.example;

import javax.microedition.khronos.opengles.GL10;

import com.example.R;

import rajawali.BaseObject3D;
import rajawali.materials.SimpleAnimatedMaterial;
import rajawali.primitives.Plane;
import rajawali.renderer.RajawaliRenderer;
import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;

public class WallpaperRenderer extends RajawaliRenderer{
	
	private BaseObject3D water1;
	private SimpleAnimatedMaterial  waterMat;

	private int frameCounter = 0;
	
	private static final String mVShader = 
			"uniform mat4 uMVPMatrix;\n" +
			
			"#ifdef ANIMATED\n" +
			"uniform float uCurrentFrame;\n" +
			"uniform float uTileSize;\n" +
			"uniform float uNumTileRows;\n" +
			"#endif\n" +

			"attribute vec4 aPosition;\n" +
			"attribute vec2 aTextureCoord;\n" +
			"attribute vec4 aColor;\n" +

			"varying vec2 vTextureCoord;\n" +
			"varying vec4 vColor;\n" +		
			
			"void main() {\n" +
			"	gl_Position = uMVPMatrix * aPosition;\n" +
			"	#ifdef ANIMATED\n" +
			"		vTextureCoord.s = mod(uCurrentFrame, uNumTileRows) * uTileSize;" +
			"		vTextureCoord.t = uTileSize * floor((uCurrentFrame ) / uNumTileRows);\n" +
			"	#else\n" +
			"		vTextureCoord = aTextureCoord;\n" +
			"	#endif\n" +
			"	vColor = aColor;\n" +
			"}\n";
		
	private static final String mFShader = 
			"precision mediump float;\n" +

			"varying vec2 vTextureCoord;\n" +
			"uniform sampler2D uDiffuseTexture;\n" +
			"varying vec4 vColor;\n" +

			"#ifdef ANIMATED\n" +
			"uniform float uTileSize;\n" +
			"uniform float uNumTileRows;\n" +
			"#endif\n" +

			"void main() {\n" +
			"		vec2 realTexCoord = vTextureCoord + (gl_PointCoord / uNumTileRows);" +
			"		gl_FragColor = texture2D(uDiffuseTexture, realTexCoord);\n" +
			"}\n";
	
	public WallpaperRenderer(Context context) {
		super(context);
		setFrameRate(30);
		setBackgroundColor(0x666666);
	}
		
	public void initScene() {
	
		mCamera.setPosition(0, 15, -15);
		mCamera.setLookAt(0,0,0);
		
		Bitmap waterTex = BitmapFactory.decodeResource(mContext.getResources(), R.drawable.wateratlas);
		
		waterMat = new SimpleAnimatedMaterial(mVShader, mFShader, true);
		waterMat.setTileSize(.25f);
		waterMat.setNumTileRows(4);
		
		water1 = new Plane(10,10,1,1);
		water1.setMaterial(waterMat);
		water1.addTexture(mTextureManager.addTexture(waterTex));
		water1.setRotation(0, 90, -90);

	    addChild(water1);

	}
	
	@Override
	public void onDrawFrame(GL10 glUnused) {
			super.onDrawFrame(glUnused);
			waterMat.setCurrentFrame(frameCounter);
	    	if(frameCounter++ == 16)
	    		frameCounter = 0;
	}

}